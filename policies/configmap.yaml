apiVersion: v1
kind: ConfigMap
metadata:
  name: acs-policies
  namespace: rhacs-operator
data:
  env-var-contains-secret.json: |
    {
      "id": "f4996314-c3d7-4553-803b-b24ce7febe48",
      "name": "Environment Variable Contains Secret",
      "description": "Alert on deployments with environment variables that contain 'SECRET'",
      "rationale": "Using secrets in environment variables may allow inspection into your secrets from the host or even through the orchestrator UI.",
      "remediation": "Migrate your secrets from environment variables to orchestrator secrets or your security team's secret management solution.",
      "disabled": false,
      "categories": ["Security Best Practices"],
      "lifecycleStages": ["DEPLOY"],
      "eventSource": "NOT_APPLICABLE",
      "exclusions": [],
      "scope": [],
      "severity": "HIGH_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            {
              "fieldName": "Environment Variable",
              "booleanOperator": "OR",
              "negate": false,
              "values": [
                { "value": "RAW=.*SECRET.*|.*PASSWORD.*=" }
              ]
            }
          ]
        }
      ]
    }

  fixable-important-cves.json: |
    {
      "id": "a919ccaf-6b43-4160-ac5d-a405e1440a41",
      "name": "Fixable Severity at least Important",
      "description": "Alert on deployments with fixable vulnerabilities with a Severity Rating at least Important",
      "rationale": "Known vulnerabilities make it easier for adversaries to exploit your application. You can fix these high-severity vulnerabilities by updating to a newer version of the affected component(s).",
      "remediation": "Use your package manager to update to a fixed version in future builds or speak with your security team to mitigate the vulnerabilities.",
      "disabled": false,
      "categories": ["Vulnerability Management"],
      "lifecycleStages": ["BUILD", "DEPLOY"],
      "eventSource": "NOT_APPLICABLE",
      "exclusions": [],
      "scope": [],
      "severity": "HIGH_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Fixed By", "booleanOperator": "OR", "negate": false, "values": [{"value": ".*"}] },
            { "fieldName": "Severity", "booleanOperator": "OR", "negate": false, "values": [{"value": ">= IMPORTANT"}] }
          ]
        }
      ]
    }

  privilege-escalation.json: |
    {
      "id": "16c95922-08c4-41b6-a721-dc4b2a806632",
      "name": "Container with privilege escalation allowed",
      "description": "Alerts if a deployment has containers with allowPrivilegeEscalation set to true in its security context.",
      "rationale": "A container process can run with more privileges than its parent process if the container's security context has the boolean setting allowPrivilegeEscalation enabled.",
      "remediation": "Verify that privileged escalation is required and cannot be provided with a subset of other controls. Disable privilege escalation by setting allowPrivilegeEscalation to false.",
      "disabled": false,
      "categories": ["Privileges","Security Best Practices"],
      "lifecycleStages": ["DEPLOY"],
      "eventSource": "NOT_APPLICABLE",
      "exclusions": [],
      "scope": [],
      "severity": "MEDIUM_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Allow Privilege Escalation", "booleanOperator": "OR", "negate": false, "values":[{"value": "true"}] }
          ]
        }
      ]
    }

  privileged-container.json: |
    {
      "id": "fe9de18b-86db-44d5-a7c4-74173ccffe2e",
      "name": "Privileged Container",
      "description": "Alert on deployments with containers running in privileged mode",
      "rationale": "Containers running as privileged represent greater post-exploitation risk.",
      "remediation": "Verify that privileged capabilities are required and cannot be provided with a subset of other controls.",
      "disabled": false,
      "categories": ["Docker Cis","Privileges"],
      "lifecycleStages": ["DEPLOY"],
      "eventSource": "NOT_APPLICABLE",
      "exclusions": [],
      "scope": [],
      "severity": "MEDIUM_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Privileged Container", "booleanOperator": "OR", "negate": false, "values":[{"value": "true"}] }
          ]
        }
      ]
    }

  process-targeting-kubelet.json: |
    {
      "id": "86804b96-e87e-4eae-b56e-1718a8a55763",
      "name": "Process Targeting Cluster Kubelet Endpoint",
      "description": "Detects misuse of the healthz/kubelet API/heapster endpoint",
      "rationale": "A pod communicating to a Kubernetes API from via command line is highly irregular",
      "remediation": "Look for open ports that may allow remote execution. Remove network utilities like curl and wget.",
      "disabled": false,
      "categories": ["Kubernetes"],
      "lifecycleStages": ["RUNTIME"],
      "eventSource": "DEPLOYMENT_EVENT",
      "exclusions": [],
      "scope": [],
      "severity": "HIGH_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Process Arguments", "booleanOperator": "OR", "negate": false, "values":[{"value": "(https?://)?(\\d{1,3}\\.){3}\\d{1,3}:(10250|10248|10255)|heapster\\.kube\\-system/metrics|KUBERNETES_PORT_443_TCP_ADDR|KUBERNETES_SERVICE_HOST.*"}] }
          ]
        }
      ]
    }

  unauthorized-network-flow.json: |
    {
      "id": "1b74ffdd-8e67-444c-9814-1c23863c8ccb",
      "name": "Unauthorized Network Flow",
      "description": "Violation for network flows outside baselines",
      "rationale": "The network baseline is a list of flows that are allowed.",
      "remediation": "Evaluate this network flow. If okay, add it to baseline.",
      "disabled": false,
      "categories": ["Anomalous Activity","Zero Trust"],
      "lifecycleStages": ["RUNTIME"],
      "eventSource": "DEPLOYMENT_EVENT",
      "exclusions": [],
      "scope": [],
      "severity": "HIGH_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Unexpected Network Flow Detected", "booleanOperator": "OR", "negate": false, "values":[{"value": "true"}] }
          ]
        }
      ]
    }

  unauthorized-process-execution.json: |
    {
      "id": "89cae2e6-0cb7-4329-8692-c2c3717c1237",
      "name": "Unauthorized Process Execution",
      "description": "Violation for any process not allowed by locked process baseline",
      "rationale": "Execution of unknown process indicates potential malicious activity.",
      "remediation": "Evaluate for malicious intent, then kill the pod if needed.",
      "disabled": false,
      "categories": ["Anomalous Activity"],
      "lifecycleStages": ["RUNTIME"],
      "eventSource": "DEPLOYMENT_EVENT",
      "exclusions": [],
      "scope": [],
      "severity": "HIGH_SEVERITY",
      "policySections": [
        {
          "sectionName": "",
          "policyGroups": [
            { "fieldName": "Unexpected Process Executed", "booleanOperator": "OR", "negate": false, "values":[{"value": "true"}] }
          ]
        }
      ]
    }
